################################
##### 2020-06-03
################################

eyColours = as.data.frame(read.table(header = TRUE, sep = ",", text = "
colour,rgb
black,'#000000'
artichokeGreen,'#8f9779'
fern,'#71bc78'
forestGreen,'#228b22'
mint,'#3eb489'
myrtleGreen,'#317873'
olive,'#808000'
pear,'#d1e231'
"))

eyColour = t(eyColours$rgb)
names(eyColour) = eyColours$colour


# real, split -> forestGreen
# real, tsirigos -> fern
# rndAge, split -> olive
# rndAge, tsirigos -> pear
# rndTsins, split -> myrtleGreen
# rndTsins, tsirigos -> mint


################################################

randomiseAllInsulations = function(myTable) {
	newTable = myTable
	myAges = as.character(myTable$insulation)
	scramblingTable = as.data.frame(cbind(myAges, runif(length(myAges))))
	colnames(scramblingTable) = c("insulation", "rnd")
	scramblingTable = scramblingTable[order(scramblingTable$rnd),]
	newTable$insulation = as.numeric(as.character(scramblingTable$insulation))
	
	return(newTable)
	}

################################################

getTsinsTableFromFolder = function(myFolder, myPattern = "*.*") {
	
	allFiles = dir(myFolder, myPattern)
	TsinsTable = data.frame()
	for (thisFile in allFiles) {
		subTable = read.table(file.path(myFolder, thisFile), header = FALSE, sep = "\t")
		colnames(subTable) = c("chr", "start", "end", "insulation")
		rownames(subTable) = NULL
        thisRow = c(file = thisFile, minTsins = min(subTable$insulation), maxTsins = max(subTable$insulation))
		TsinsTable = rbind(TsinsTable, t(as.data.frame(thisRow)))
		}
	
	TsinsTable$file = as.character(TsinsTable$file)
	TsinsTable$minTsins = as.numeric(as.character(TsinsTable$minTsins))
	TsinsTable$maxTsins = as.numeric(as.character(TsinsTable$maxTsins))
	
	TsinsTable = as.data.frame(TsinsTable)
	
	rownames(TsinsTable) = NULL
	TsinsTable = TsinsTable[with(TsinsTable, order(minTsins, maxTsins)),]
	
	return(TsinsTable)	
	}

################################################

saveTsinsHistograms = function(myData, myLimits, outputFolder, prefix = "file", myYLim = c(0, 1), myBins = 16, myColour = "forestGreen") {
	
	for (i in 1:nrow(myLimits)) {
		myFile = myLimits[i, 1]
		minTsins = myLimits[i, 2]
		maxTsins = myLimits[i, 3]
		outputFilePath = file.path(outputFolder, paste0(prefix, "_", i, ".png"))
		
		plotHistogramInsulations = ggplot(
			subset(myData, insulation >= minTsins & insulation <= maxTsins), aes(x = age_jump, y = (..count..) / sum(..count..))) +
			geom_histogram(colour = eyColour["black"], fill = eyColour[myColour], bins = myBins) +
			labs(x = "ageJump (binary, 1 = young, 16 = old)", y = "percent", title = "ageJump distribution", subtitle = paste0("File: ", myFile, " (Tsins = [", minTsins, ", ", maxTsins, "])")) +
			theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), plot.subtitle = element_text(size = 11, face = "bold", family = "Ubuntu"), axis.title.x = element_text(size = 12, family = "Ubuntu"), axis.title.y = element_text(size = 12, family = "Ubuntu")) +
			scale_x_continuous(labels = scales::comma, limits = c(-1, myBins)) +
			scale_y_continuous(labels = scales::percent, limits = myYLim)
		
		ggsave(outputFilePath, plot = plotHistogramInsulations, height = 6, width = 6, dpi = 300, units = "in")
		print(paste0("Saved ", outputFilePath))
		}
	}
	
# saveTsinsHistograms(ageJumpInsulation, hESCTsins, "/mnt/sexreg/temporal/geneage/TADInsulation/", prefix = "hist_insulation", myColour = "fern", myYLim = c(0, 0.4))

################################################

addGroupColumn = function(myData, myLimits) {
	
	myData$group = NA
	
	resultingTable = data.frame()
	for (i in 1:nrow(myLimits)) {
		tablePart = subset(myData, insulation >= myLimits$minTsins[i] & insulation <= myLimits$maxTsins[i])
		tablePart$group = myLimits$file[i]
		resultingTable = rbind(resultingTable, tablePart)
		}
	
	resultingTable = resultingTable[with(resultingTable, order(border_chr, border_start, border_end)),]
	
	return(resultingTable)
	
	}
	
ppp2 = addGroupColumn(ppp, hESCTsins)

	
################################################

saveTsinsBoxplotsSeparated = function(dataReal, dataRndAge, dataRndTsins, myLimits, colours = 1:3, transparency = 0.2, outputFolder, prefix) {

	groupNames = c("real", "rnd_age", "rnd_tsins")
	
	dataRealGroup = addGroupColumn(dataReal, myLimits)
	dataRndAgeGroup = addGroupColumn(dataRndAge, myLimits)
	dataRndTsinsGroup = addGroupColumn(dataRndTsins, myLimits)
	
	dataRealGroup$dataset = groupNames[1]
	dataRndAgeGroup$dataset = groupNames[2]
	dataRndTsinsGroup$dataset = groupNames[3]
	
	allData = rbind(dataRealGroup, dataRndAgeGroup, dataRndTsinsGroup)
	
	allData$group_dataset = paste0(allData$group, "_", allData$dataset)
	
	myLabels = paste0(c("real", "rnd_age", "rnd_tsins"), paste0(", set#", sort(rep(1:nrow(myLimits), 3))))
	
	for (i in 1:length(groupNames)) {
		thisPlot = ggplot(subset(allData, dataset == groupNames[i]), aes(x = group_dataset, y = age_jump, group = group_dataset, fill = factor(group_dataset))) + geom_boxplot(outlier.shape = NA, fill = colours[i]) + geom_jitter(width = 0.25, alpha = transparency) + theme(legend.position = "none", axis.text.x = element_text(angle = 90)) + ylim(0, 16)

		outputFilePath = file.path(outputFolder, paste0(prefix, "_", groupNames[i], ".png"))
		ggsave(outputFilePath, plot = thisPlot, height = 6, width = 4, dpi = 300, units = "in")
		}
	}
	
################################################

saveTsinsBoxplots = function(dataReal, dataRndAge, dataRndTsins, myLimits, colours = 1:3, transparency = 0.2, outputFilePath) {

	groupNames = c("real", "rnd_age", "rnd_tsins")
	
	dataRealGroup = addGroupColumn(dataReal, myLimits)
	dataRndAgeGroup = addGroupColumn(dataRndAge, myLimits)
	dataRndTsinsGroup = addGroupColumn(dataRndTsins, myLimits)
	
	dataRealGroup$dataset = groupNames[1]
	dataRndAgeGroup$dataset = groupNames[2]
	dataRndTsinsGroup$dataset = groupNames[3]
	
	allData = rbind(dataRealGroup, dataRndAgeGroup, dataRndTsinsGroup)
	
	allData$group_dataset = paste0(allData$group, "_", allData$dataset)
	
	myLabels = paste0(c("real", "rnd_age", "rnd_tsins"), paste0(", set#", sort(rep(1:nrow(myLimits), 3))))
	
	thisPlot = ggplot(allData, aes(x = group_dataset, y = age_jump, group = group_dataset, fill = factor(dataset))) + geom_boxplot(outlier.shape = NA, fill = rep(colours, nrow(myLimits))) + geom_jitter(width = 0.25, alpha = transparency) + theme(legend.position = "none", axis.text.x = element_text(angle = 90)) + ylim(0, 16)
	
	ggsave(outputFilePath, plot = thisPlot, height = 6, width = 12, dpi = 300, units = "in")

	}
	
################################################
	
saveTsinsBoxplots = function(myData, myLimits, outputFolder, prefix = "file", myYLim = c(0, 1), myBins = 16, myColour = "forestGreen") {
	
	myData$group = NA
	
	for (i in 1:nrow(myData)) {
		if (myData[i, "insulation"]
		}

	}

################################################

readTablesInFolder = function(myFolder, myPattern = "*.*") {
    allFiles = dir(myFolder, myPattern)
    
    fullTable = data.frame()
    for (thisFile in allFiles) {
		print(file.path(myFolder, thisFile))
        subTable = read.table(file.path(myFolder, thisFile), header = FALSE, sep = "\t")
        fullTable = rbind(fullTable, subTable)
        }
    
    return(fullTable)
    }
	
################################################
############## start region from TADAvg_analysis
################################################


getJumpListVsInsulation = function(TADList, insulationList, chromosomesList) {
    
    insulationWithAgeJumps = data.frame()
    for(i in 1:nrow(insulationList)) {
        thisChrom = insulationList[i, "chr"]
        borderStart = insulationList[i, "start"]
        borderEnd = insulationList[i, "end"]
        borderInsulation = insulationList[i, "insulation"]
        previousTAD = subset(TADList, tad_chr == thisChrom & tad_end == borderStart)
        nextTAD = subset(TADList, tad_chr == thisChrom & tad_start == borderEnd)
        
		print(paste0("Working on chromosome ", thisChrom, ", TAD #", i, "."))
        if(nrow(nextTAD) == 1 & nrow(previousTAD) == 1) {
            previousAge = previousTAD$meanAge
            nextAge = nextTAD$meanAge
            ageJump = abs(previousAge - nextAge)
			previousTotGenes = previousTAD$totGenes
			nextTotGenes = nextTAD$totGenes
            thisRow = c(border_chr = thisChrom, border_start = borderStart, border_end = borderEnd, age_jump = ageJump, insulation = borderInsulation, previous_totgenes = previousTotGenes, next_totgenes = nextTotGenes)
            insulationWithAgeJumps = rbind(insulationWithAgeJumps, t(as.data.frame(thisRow)))
            }
        }
        
    insulationWithAgeJumps$border_chr = as.character(insulationWithAgeJumps$border_chr)
    insulationWithAgeJumps$border_start = as.numeric(as.character(insulationWithAgeJumps$border_start))
    insulationWithAgeJumps$border_end = as.numeric(as.character(insulationWithAgeJumps$border_end))
    insulationWithAgeJumps$age_jump = as.numeric(as.character(insulationWithAgeJumps$age_jump))
    insulationWithAgeJumps$insulation = as.numeric(as.character(insulationWithAgeJumps$insulation))
    insulationWithAgeJumps$previous_totgenes = as.numeric(as.character(insulationWithAgeJumps$previous_totgenes))
    insulationWithAgeJumps$next_totgenes = as.numeric(as.character(insulationWithAgeJumps$next_totgenes))
    
    insulationWithAgeJumps = as.data.frame(insulationWithAgeJumps)
	
	rownames(insulationWithAgeJumps) = NULL
	
    return(insulationWithAgeJumps)
    }
	
# ageJumpInsulation = getJumpListVsInsulation(TADAgeList, hESCTADInsulations, chromosomes_hg19)

################################################

boundariesToTADs = function(TADBoundaries, chromList, includeStartAndEnd = TRUE) {
	
	resultingTADs = data.frame()
	for (chromNum in 1:nrow(chromList)) {
		thisChrom = chromList[chromNum, "chrom"]
		thisChromNoPrefix = substr(thisChrom, 4, 5)
		
		TADBoundariesInChrom = subset(TADBoundaries, chr == thisChromNoPrefix)
		
		if(nrow(TADBoundariesInChrom) > 0) {
			endOfPreviousTAD = 1
			for (i in 1:nrow(TADBoundariesInChrom)) {
				
				if (i > 1 || (i == 1 & includeStartAndEnd)) {
					TADStart = endOfPreviousTAD
					TADEnd = TADBoundariesInChrom[i,"start"]
					newRow = c(thisChromNoPrefix, TADStart, TADEnd, "-")
					resultingTADs = rbind(resultingTADs, t(as.data.frame(newRow)))
					}
				
				endOfPreviousTAD = TADBoundariesInChrom[i,"end"]
				
				}
				
			if(includeStartAndEnd) {
				# finishing the chromosome
				newRow = c(thisChromNoPrefix, endOfPreviousTAD, chromList[chromNum, "end"], "-")
				resultingTADs = rbind(resultingTADs, t(as.data.frame(newRow)))
				}
			}
		}
		
	colnames(resultingTADs) = c("chr", "start", "end", "TAD")
	rownames(resultingTADs) = NULL
	resultingTADs$chr = as.character(resultingTADs$chr)
	resultingTADs$start = as.numeric(as.character(resultingTADs$start))
	resultingTADs$end = as.numeric(as.character(resultingTADs$end))
	resultingTADs$TAD = as.character(resultingTADs$TAD)
	
	resultingTADs = as.data.frame(resultingTADs)
	return(resultingTADs)
	}


# block of functions extracted from the colocalisation analysis

library(ggplot2)
# library(wikifacts)

getTADGenesTable = function(myGenes, myTADs) {
	feedbackLoop = 1000
	# all.equal(newTADList_old, newTADList) gives true
	# without doing this stack thing, it took 6:15
	# using stacks of 3000, it takes 1:17 to do the same
	# using stacks of 100, it takes 1:13
	stackSize = 100
	TADGenesTable = data.frame()
	TADGenesTableStack = data.frame()
	geneDistribution = c()
	for (i in 1:nrow(myGenes)) {
	#for (i in 1:3000) {
		if (i %% feedbackLoop == 0) print(paste0("Checking gene #", i, "/", nrow(myGenes)))
		# if (i %% (feedbackLoop * 10) == 0) print(wiki_randomfact())
		row = myGenes[i,]
		mySubset = subset(myTADs, myTADs$end > row$start_position & myTADs$start < row$end_position & myTADs$chr == row$chromosome_name)
		geneDistribution = c(geneDistribution, nrow(mySubset))
		if (nrow(mySubset) == 1) {
			newRow = cbind(row, mySubset[, 1:3], paste(mySubset[1,1], mySubset[1,2], mySubset[1,3], sep = "_"))
			TADGenesTableStack = rbind(TADGenesTableStack, newRow)
			}
			
		if (i %% stackSize == 0 | i == nrow(myGenes)) {
			TADGenesTable = rbind(TADGenesTable, TADGenesTableStack)
			TADGenesTableStack = data.frame()
			}
		}
		
		for (j in 0:max(geneDistribution)) print(paste0("There are ", sum(geneDistribution == j), " genes present in exactly ", j, " TADs (", round(sum(geneDistribution == j) / length(geneDistribution) * 100, 2), "%)."))
		
		colnames(TADGenesTable) = c("ensembl_gene_id", "wikigene_name", "gene_chr", "gene_start", "gene_end", "gene_biotype", "tad_chr", "tad_start", "tad_end", "tad_id")
		
		return(TADGenesTable)
	}
	
mergeGeneTADAge = function(myGeneTADs, myGeneAges) {
	
	colnames(myGeneAges) = c("ensembl_gene_id", colnames(myGeneAges)[2:6])
	gene_age = c()
	for (i in 1:nrow(myGeneTADs)) {
		# if there are repeated ensembl_gene_id elements, this will give problems
		thisAge = as.character(subset(myGeneAges, as.character(ensembl_gene_id) == myGeneTADs[i, 1])[1,"GeneAge"])
		if (is.na(thisAge)) thisAge = "No Age Provided"
		gene_age = c(gene_age, thisAge)
		}

	geneTADAge = cbind(myGeneTADs, gene_age)
	return(geneTADAge)
	}
	
ngene = function(myTable, myTADid) {
	TADrows = unique(subset(myTable, tad_id == myTADid))
	return(nrow(TADrows))
	}
	
interTADRemover = function(myTADs, myChromosomes) {
	
	# indices for myChromosomes
	CHROMINDEX = 1
	CENTROMEREINDEX = 2
	CHRENDINDEX = 3
	
	# indices for myTAD
	CHROMINDEX = 1
	STARTINDEX = 2
	ENDINDEX = 3
	TADNAMEINDEX = 4
	
	chromList = myChromosomes[,CHROMINDEX]
	
	newTADs = vector()
	for (chromNum in 1:length(chromList)) {
		thisChrom = chromList[chromNum]
		thisChromNoPrefix = substr(thisChrom, 4, 5)
		
		print(paste0("Working on ", thisChrom, "..."))
		TADsubset = as.data.frame(subset(myTADs, paste0("chr", chr) == thisChrom))
		if (nrow(TADsubset) > 0) {
			
			startingPoint = 0
			for (i in 1:nrow(TADsubset)) {
				
				TADName = paste0("Original tad_id = ", TADsubset$chr[[i]], "_", TADsubset$start[[i]], "_", TADsubset$end[[i]])
				
				if (i < nrow(TADsubset)) endingPoint = floor((TADsubset$end[[i]] + TADsubset$start[[i + 1]]) / 2)
				else endingPoint = as.numeric(as.character(subset(as.data.frame(myChromosomes), chrom == thisChrom)$end))
				
				newRow = c(chr = thisChromNoPrefix, start = startingPoint, end = endingPoint, TAD = TADName, length = endingPoint - startingPoint)
				
				newTADs = rbind(newTADs, newRow)
				
				startingPoint = endingPoint
				
				}
			
			}
		else print(paste0("Warning: no TADs for ", thisChrom, ", removing..."))
		}
		
			
	rownames(newTADs) = NULL
	newTADs = as.data.frame(newTADs)
	newTADs$chr = as.character(newTADs$chr)
	newTADs$start = as.numeric(as.character(newTADs$start))
	newTADs$end = as.numeric(as.character(newTADs$end))
	newTADs$TAD = as.character(as.character(newTADs$TAD))
	newTADs$length = as.numeric(as.character(newTADs$length))
	return(newTADs)
	
	}

fusedTAD = function(myTADs, myChromosomes) {
# forked from version of 12dic-2019
# note: this algorithm removes the interTAD regions
	
	# indices for myChromosomes
	CHROMINDEX = 1
	CENTROMEREINDEX = 2
	CHRENDINDEX = 3
	
	# indices for myTAD
	CHROMINDEX = 1
	STARTINDEX = 2
	ENDINDEX = 3
	TADNAMEINDEX = 4
	
	chromList = myChromosomes[,CHROMINDEX]
	
	newTADs = vector()
	for (chromNum in 1:length(chromList)) {
		thisChrom = chromList[chromNum]
		thisChromNoPrefix = substr(thisChrom, 4, 5)
		
		print(paste0("Working on ", thisChrom, "..."))
		TADsubset = as.data.frame(subset(myTADs, paste0("chr", chr) == thisChrom))
		if (nrow(TADsubset) > 0) {
		
			startingPoint = 0
			previousTAD = paste0("beginning of ", thisChrom)
			for (i in 1:nrow(TADsubset)) {
				# print(paste0(thisChrom, ":", TADsubset$start[[i]], "-", TADsubset$end[[i]]))
				cuttingPoint = floor((TADsubset$start[[i]] + TADsubset$end[[i]]) / 2)
				nextTAD = paste0(as.character(TADsubset[i, CHROMINDEX]), "_", as.character(TADsubset[i, STARTINDEX]), "_", as.character(TADsubset[i, ENDINDEX]))
				previousTADMessage = previousTAD
				nextTADMessage = nextTAD
				if (previousTAD != paste0("beginning of ", thisChrom)) previousTADMessage = paste0("second half of ", previousTADMessage)
				if (nextTAD != paste0("ending of ", thisChrom)) nextTADMessage = paste0("first half of ", nextTADMessage)
				newRow = c(chr = thisChromNoPrefix, start = startingPoint, end = cuttingPoint, TAD = paste0(previousTADMessage, " & ", nextTADMessage), length = cuttingPoint - startingPoint)
				
				newTADs = rbind(newTADs, newRow)
				
				previousTAD = nextTAD
				startingPoint = cuttingPoint
				}
				
			# now adding last half TAD
				cuttingPoint = as.numeric(as.character(subset(as.data.frame(myChromosomes), chrom == thisChrom)$end))
				nextTAD = paste0("ending of ", thisChrom)
				previousTADMessage = previousTAD
				nextTADMessage = nextTAD
				if (previousTAD != paste0("beginning of ", thisChrom)) previousTADMessage = paste0("second half of ", previousTADMessage)
				if (nextTAD != paste0("ending of ", thisChrom)) nextTADMessage = paste0("first half of ", nextTADMessage)
				newRow = c(chr = thisChromNoPrefix, start = startingPoint, end = cuttingPoint, TAD = paste0(previousTADMessage, " & ", nextTADMessage), length = cuttingPoint - startingPoint)
				
				newTADs = rbind(newTADs, newRow)
		}
		else print(paste0("Warning: no TADs for ", thisChrom, ", removing..."))
		
		}
		
	rownames(newTADs) = NULL
	newTADs = as.data.frame(newTADs)
	newTADs$chr = as.character(newTADs$chr)
	newTADs$start = as.numeric(as.character(newTADs$start))
	newTADs$end = as.numeric(as.character(newTADs$end))
	newTADs$TAD = as.character(as.character(newTADs$TAD))
	newTADs$length = as.numeric(as.character(newTADs$length))
	return(newTADs)
	
	}

makeAllOneHugeTAD = function(myTable, hugeTADName = "hugeTAD") {
	newTable = myTable
	newTable$tad_id = hugeTADName
	
	return(newTable)
	}
	
randomiseAllAges = function(myTable) {
	newTable = myTable
	myAges = as.character(myTable$gene_age)
	scramblingTable = as.data.frame(cbind(myAges, runif(length(myAges))))
	colnames(scramblingTable) = c("gene_age", "rnd")
	scramblingTable = scramblingTable[order(scramblingTable$rnd),]
	newTable$gene_age = scramblingTable$gene_age
	
	return(newTable)
	}
	

getTADAgeList = function(myGeneTADAgeTable, ageEquival) {
	
	# using merge here is overkill, because I just want to bring the avgMy
	myGeneTADAgeTable$avgMy = ageEquival$avgMy[match(myGeneTADAgeTable$gene_age, ageEquival$age)]
	allTADs = as.data.frame(sort(as.character(unique(myGeneTADAgeTable$tad_id))))
	colnames(allTADs) = "tad_id"
	allTADs$tad_chr = NA
	allTADs$tad_start = NA
	allTADs$tad_end = NA
	allTADs$meanAge = NA
	allTADs$totGenes = NA

	for(i in 1:nrow(allTADs)) {
		subTable = subset(myGeneTADAgeTable, as.character(tad_id) == allTADs[i, "tad_id"])
		allTADs[i, "meanAge"] = mean(subTable[, "avgMy"])
		allTADs[i, "tad_chr"] = as.character(subTable[1, "tad_chr"])
		allTADs[i, "tad_start"] = subTable[1, "tad_start"]
		allTADs[i, "tad_end"] = subTable[1, "tad_end"]
		allTADs[i, "totGenes"] = nrow(subTable)
		}

	allTADs = allTADs[with(allTADs, order(tad_chr, tad_start, tad_end)),]
	rownames(allTADs) = NULL
	
	return(allTADs)
	}

getJumpList = function(myList, column) {
	
	# should be sorted already, but just in case...
	myList = myList[with(myList, order(tad_chr, tad_start, tad_end)),]
	
	jumpList = vector()
	for (i in 1:(nrow(myList) - 1)) {
		
		if (myList[i + 1, "tad_chr"] == myList[i, "tad_chr"]) {
			thisJump = abs(myList[i + 1, column] - myList[i, column])
			thisRow = c(chr = myList[i, "tad_chr"], jump = thisJump)
			jumpList = rbind(jumpList, thisRow)
			}
		}
	
	jumpList = as.data.frame(jumpList)
	colnames(jumpList) = c("chr", "jump")
	rownames(jumpList) = NULL
	jumpList$chr = as.character(jumpList$chr)
	jumpList$jump = as.numeric(as.character(jumpList$jump))
	
	return(jumpList)
	
	}
	
saveTADAgeGraphs = function(data, folder, filePrefix = "meanAge", fileSuffix = "", chromosomes = c(1:22, "X", "Y"), ymax = 800) {
	
	if (fileSuffix != "") fileSuffix = paste0("_", fileSuffix)
	
	for(chrom in chromosomes) {
		thisPlot = ggplot(subset(data, tad_chr == chrom), aes(ymin = 0, fill = factor(floor(3 * (meanAge - 0.1) / max(meanAge))))) + geom_rect(aes(ymax = meanAge, xmin = tad_start, xmax = tad_end)) + labs(x = paste0("TAD position in chr", chrom), y = "mean age of TAD in Ma", title = paste0("chr", chrom)) + theme(legend.position = "none", plot.title = element_text(size = 28, face = "bold", family = "Ubuntu"), axis.title.x = element_text(size = 20, family = "Ubuntu"), axis.title.y = element_text(size = 20, family = "Ubuntu")) + ylim(0, ymax)
		
		ggsave(paste0(folder, filePrefix, "_chr", chrom, fileSuffix, ".png"), plot = thisPlot, height = 5, width = 12, dpi = 300, units = "in")
		}
	}

generateRegularTADList = function(chromosomes, size = 500000) {
	
	finalList = data.frame()
	for (i in 1:nrow(chromosomes)) {
		chromStr = chromosomes[i, "chrom"]
		chrom = substr(chromStr, 4, nchar(chromStr))
		chromEnd = as.numeric(chromosomes[i, "end"])
		
		startPosition = 0
		while (startPosition <= chromEnd - size) {
			
			thisRow = c(chrom, startPosition, startPosition + size - 1)
			finalList = rbind(finalList, t(as.data.frame(thisRow)))
			startPosition = startPosition + size
			}
			
		if (startPosition > chromEnd - size) {
			thisRow = c(chrom, startPosition, chromEnd)
			finalList = rbind(finalList, t(as.data.frame(thisRow)))
			}
		
		}
	
	rownames(finalList) = NULL
	colnames(finalList) = c("chr", "start", "end")
	finalList$chr = as.character(unlist(finalList$chr))
	finalList$start = as.numeric(as.character(unlist(finalList$start)))
	finalList$end = as.numeric(as.character(unlist(finalList$end)))
	
	return(finalList)
	
	}
	
################################################

# making chromosomes:

# to get centromere positions for human:
# go to http://genome.ucsc.edu/cgi-bin/hgTables
# choose assembly:"Feb. 2009 (GRCh37/hg19)" group:"All Tables" -> table:gap
# click on "get output"
# telomeres are coincidental with Caelinn's data, so I assume we are using the correct assembly
# filter centromeres are as gap "type"

# to get centromere positions for mouse:
# go to http://genome.ucsc.edu/cgi-bin/hgTables
# genome: Mouse
# choose assembly:"Dec. 2011 (GRCm38/mm10)" group:"All Tables" -> table:gap
# click on "get output"
# telomeres are coincidental with Caelinn's data, so I assume we are using the correct assembly
# filter centromeres are as gap "type"

centromerePositions_hg19 = as.data.frame(read.table(header = TRUE, sep = ",", text = "
chrom,centromere
chr1,121535434
chr2,92326171
chr3,90504854
chr4,49660117
chr5,46405641
chr6,58830166
chr7,58054331
chr8,43838887
chr9,47367679
chrX,58632012
chrY,10104553
chr10,39254935
chr11,51644205
chr12,34856694
chr13,16000000
chr14,16000000
chr15,17000000
chr16,35335801
chr17,22263006
chr18,15460898
chr19,24681782
chr20,26369569
chr21,11288129
chr22,13000000
"))

# for some reason, the ucsc website does not provide
# the end telomere of chr17, so I paste it here from Caelinn's list
endTelomerePositions_hg19 = as.data.frame(read.table(header = TRUE, sep = ",", text = "
chrom,end
chr1,249240621
chr2,243189373
chr3,198012430
chr4,191144276
chr5,180905260
chr6,171105067
chr7,159128663
chr8,146354022
chr9,141203431
chrX,155260560
chrY,59363566
chr10,135524747
chr11,134996516
chr12,133841895
chr13,115159878
chr14,107339540
chr15,102521392
chr16,90344753
chr17,81195210
chr18,78067248
chr19,59118983
chr20,63015520
chr21,48119895
chr22,51294566
"))


# no centromere for mouse chrY, so I give it the same value as for all others
centromerePositions_mm10 = as.data.frame(read.table(header = TRUE, sep = ",", text = "
chrom,centromere
chr1,110000
chr2,110000
chr3,110000
chr4,110000
chr5,110000
chr6,110000
chr7,110000
chr8,110000
chr9,110000
chrX,110000
chrY,110000
chr10,110000
chr11,110000
chr12,110000
chr13,110000
chr14,110000
chr15,110000
chr16,110000
chr17,110000
chr18,110000
chr19,110000
"))

endTelomerePositions_mm10 = as.data.frame(read.table(header = TRUE, sep = ",", text = "
chrom,end
chr1,195371971
chr2,182013224
chr3,159939680
chr4,156408116
chr5,151734684
chr6,149636546
chr7,145341459
chr8,129301213
chr9,124495110
chrX,170931299
chrY,91644698
chr10,130594993
chr11,121982543
chr12,120029022
chr13,120321639
chr14,124802244
chr15,103943685
chr16,98107768
chr17,94887271
chr18,90602639
chr19,61331566
"))

chromosomes_hg19 = vector()
for (i in 1:nrow(centromerePositions_hg19)) {
	myChrom = paste0(centromerePositions_hg19[i,]$chrom)
	myCentromere = centromerePositions_hg19[i,]$centromere
	myEnd = subset(endTelomerePositions_hg19, chrom == myChrom)$end
	chromosomes_hg19 = rbind(chromosomes_hg19, c(chrom = myChrom, centromere = myCentromere, end = myEnd))
	}
	
chromosomes_mm10 = vector()
for (i in 1:nrow(centromerePositions_mm10)) {
	myChrom = paste0(centromerePositions_mm10[i,]$chrom)
	myCentromere = centromerePositions_mm10[i,]$centromere
	myEnd = subset(endTelomerePositions_mm10, chrom == myChrom)$end
	chromosomes_mm10 = rbind(chromosomes_mm10, c(chrom = myChrom, centromere = myCentromere, end = myEnd))
	}
	
################################################ functions for essentiality

getGeneEssentialityTable = function(geneList, essentialGenes) {
	
	# ensemble_gene_id = igual
	# HUGO_symbol -> "-"
	# seqnames = chromosome_name
	# start -> start_position
	# end -> end_position
	# GeneAge -> essentiality
	
	geneEssList = cbind(ensembl_gene_id = geneList[,"ensembl_gene_id"], HUGO_symbol = "-", seqnames = geneList[,"chromosome_name"], start = geneList[,"start_position"], end = geneList[,"end_position"], GeneAge = "nonEssential")
	geneEssList = as.data.frame(geneEssList, stringsAsFactors = FALSE)
	for (i in 1:nrow(essentialGenes)) {
		if (i %% 1000 == 0) print(paste0("Checked ", i, "/", nrow(essentialGenes), " rows."))
		
		thisGene = essentialGenes[i,1]
		geneEssList[geneEssList$ensembl_gene_id == thisGene, "GeneAge"] = "essential"
		}

	rownames(geneEssList) = NULL
	return(geneEssList)
	
	}
	
################################################
################################################

ageList = as.data.frame(read.table(header = TRUE, text = "
age
FungiMetazoa
Bilateria
Chordata
Euteleostomi
Sarcopterygii
Tetrapoda
Amniota
Mammalia
Theria
Eutheria
Simiiformes
Catarrhini
Hominoidea
Hominidae
HomoPanGorilla
HomoSapiens
"))

ageListMouse = as.data.frame(read.table(header = TRUE, text = "
age
FungiMetazoa
Bilateria
Chordata
Euteleostomi
Sarcopterygii
Tetrapoda
Amniota
Mammalia
Theria
Eutheria
Glires
Rodentia
Sciurognathi
Murinae
Mus.musculus
"))

################################################
################################################

ageEquivalencies = as.data.frame(read.table(header = TRUE, sep = ",", text = "
age,maxMy,minMy,avgMy
FungiMetazoa,1200,570,885
Bilateria,570,540,555
Chordata,540,430,485
Euteleostomi,430,420,425
Sarcopterygii,420,340,380
Tetrapoda,340,320,330
Amniota,320,180,250
Mammalia,180,160,170
Theria,160,90,125
Eutheria,90,40,65
Simiiformes,40,25,32.5
Catarrhini,25,18,21.5
Hominoidea,18,14,16
Hominidae,14,8,11
HomoPanGorilla,8,0.5,4.25
HomoSapiens,0.5,0,0.25
Glires,72.6,67.4,70
Rodentia,67.4,24,45.7
Sciurognathi,24,24,24
Murinae,24,3.35,13.675
Mus.musculus,3.35,0,1.675
"))

ageEquivalencies_binary = as.data.frame(read.table(header = TRUE, sep = ",", text = "
age,maxMy,minMy,avgMy
FungiMetazoa,3,3,3
Bilateria,3,3,3
Chordata,3,3,3
Euteleostomi,3,3,3
Sarcopterygii,1,1,1
Tetrapoda,1,1,1
Amniota,1,1,1
Mammalia,1,1,1
Theria,1,1,1
Eutheria,1,1,1
Simiiformes,1,1,1
Catarrhini,1,1,1
Hominoidea,1,1,1
Hominidae,1,1,1
HomoPanGorilla,1,1,1
HomoSapiens,1,1,1
Glires,1,1,1
Rodentia,1,1,1
Sciurognathi,1,1,1
Murinae,1,1,1
Mus.musculus,1,1,1
"))

essEquivalencies_binary = as.data.frame(read.table(header = TRUE, sep = ",", text = "
age,maxMy,minMy,avgMy
essential,3,3,3
nonEssential,1,1,1
"))

ageEquivalencies_ranking = as.data.frame(read.table(header = TRUE, sep = ",", text = "
age,maxMy,minMy,avgMy
FungiMetazoa,16,16,16
Bilateria,15,15,15
Chordata,14,14,14
Euteleostomi,13,13,13
Sarcopterygii,12,12,12
Tetrapoda,11,11,11
Amniota,10,10,10
Mammalia,9,9,9
Theria,8,8,8
Eutheria,7,7,7
Simiiformes,6,6,6
Catarrhini,5,5,5
Hominoidea,4,4,4
Hominidae,3,3,3
HomoPanGorilla,2,2,2
HomoSapiens,1,1,1
Glires,5,5,5
Rodentia,4,4,4
Sciurognathi,3,3,3
Murinae,2,2,2
Mus.musculus,1,1,1
"))

insulationSplit = as.data.frame(read.table(header = TRUE, sep = ",", text = "
file,minTsins,maxTsins
lowInsulation,0,1.7
topInsulation,1.7,10
"))


################################################
################ end region from TADAvg_analysis
################################################

################ check if Tsirigos' TADs can be used

hESCTADs = read.table("/mnt/sexreg/ChromHMM/TADs/tsv/hESCTADs.tsv")
hESCTADs$chr = substr(hESCTADs$chr, 4, length(hESCTADs$chr) - 3)


hESCTADInsulations = readTablesInFolder("/mnt/sexreg/temporal/geneage/TADInsulation/all_files/H1_hESC-untreated-HindIII-rep1/", "*.bed")
colnames(hESCTADInsulations) = c("chr", "start", "end", "insulation")
rownames(hESCTADInsulations) = NULL
hESCTADInsulations$chr = substr(hESCTADInsulations$chr, 4, length(hESCTADInsulations$chr) - 3)
hESCTADInsulations$chr = as.character(hESCTADInsulations$chr)
hESCTADInsulations = hESCTADInsulations[with(hESCTADInsulations, order(chr, start, end)),]


hESCTADsTsirigosWithSE = boundariesToTADs(hESCTADInsulations, chromosomes_hg19)
hESCTADsTsirigosNoSE = boundariesToTADs(hESCTADInsulations, chromosomes_hg19, includeStartAndEnd=FALSE)

quantile(hESCTADsTsirigosNoSE$end - hESCTADsTsirigosNoSE$start, c(0.05, 0.95))
quantile(hESCTADsTsirigosWithSE$end - hESCTADsTsirigosWithSE$start, c(0.05, 0.95))
quantile(hESCTADs$end - hESCTADs$start, c(0.05, 0.95))

hESCTADsPlot = ggplot(hESCTADs, aes(x = end - start)) + geom_histogram(colour = "#003000", fill = "#10ff80", bins = 40) + ylim(0, 1000) + labs(x = "TAD size (b)", y = "Count", title = "TAD size distribution (hESC)") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), axis.title.x = element_text(size = 12, family = "Ubuntu"), axis.title.y = element_text(size = 12, family = "Ubuntu")) + scale_x_continuous(labels = scales::comma, limits = c(0, 5000000))
hESCTADsTsirigosNoSEPlot = ggplot(hESCTADsTsirigosNoSE, aes(x = end - start)) + geom_histogram(colour = "#003000", fill = "#10ff80", bins = 40) + ylim(0, 1000) + labs(x = "TAD size (b)", y = "Count", title = "TAD size distribution (hESC Tsirigos, no start/end)") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), axis.title.x = element_text(size = 12, family = "Ubuntu"), axis.title.y = element_text(size = 12, family = "Ubuntu")) + scale_x_continuous(labels = scales::comma, limits = c(0, 5000000))
hESCTADsTsirigosWithSEPlot = ggplot(hESCTADsTsirigosWithSE, aes(x = end - start)) + geom_histogram(colour = "#003000", fill = "#10ff80", bins = 40) + ylim(0, 1000) + labs(x = "TAD size (b)", y = "Count", title = "TAD size distribution (hESC Tsirigos, included start/end)") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), axis.title.x = element_text(size = 12, family = "Ubuntu"), axis.title.y = element_text(size = 12, family = "Ubuntu")) + scale_x_continuous(labels = scales::comma, limits = c(0, 5000000))

ggsave("/mnt/sexreg/temporal/geneage/TADInsulation/TADSize_hESC.png", plot = hESCTADsPlot, height = 6, width = 6, dpi = 300, units = "in")
ggsave("/mnt/sexreg/temporal/geneage/TADInsulation/TADSize_hESCTsitigosNoSE.png", plot = hESCTADsTsirigosNoSEPlot, height = 6, width = 6, dpi = 300, units = "in")
ggsave("/mnt/sexreg/temporal/geneage/TADInsulation/TADSize_hESCTsitigosWithSE.png", plot = hESCTADsTsirigosWithSEPlot, height = 6, width = 6, dpi = 300, units = "in")


################################################
######## start analysis of ageJumps by boundary!
################################################

hESCTADInsulations = readTablesInFolder("/mnt/sexreg/temporal/geneage/TADInsulation/all_files/H1_hESC-untreated-HindIII-rep1/", "*.bed")
colnames(hESCTADInsulations) = c("chr", "start", "end", "insulation")
rownames(hESCTADInsulations) = NULL
hESCTADInsulations$chr = substr(hESCTADInsulations$chr, 4, length(hESCTADInsulations$chr) - 3)
hESCTADInsulations$chr = as.character(hESCTADInsulations$chr)
hESCTADInsulations = hESCTADInsulations[with(hESCTADInsulations, order(chr, start, end)),]

hESCTADsTsirigosWithSE = boundariesToTADs(hESCTADInsulations, chromosomes_hg19)
hESCTADsTsirigosNoSE = boundariesToTADs(hESCTADInsulations, chromosomes_hg19, includeStartAndEnd=FALSE)

library("biomaRt")
ensembl75 = useMart(host='feb2014.archive.ensembl.org',
						biomart='ENSEMBL_MART_ENSEMBL',
						dataset='hsapiens_gene_ensembl')
allBioMartHuman = getBM(mart = ensembl75, attributes = c("ensembl_gene_id", "wikigene_name", "chromosome_name", "start_position", "end_position", "gene_biotype"))

thisFolder = "/mnt/sexreg/temporal/geneage/"

# sampleAgeFile = paste0(thisFolder, "pgen.1007902.s021.tsv") # old, given by Daniel, with no chrX
sampleAgeFile = paste0(thisFolder, "AgesWithChrX.tsv") # converted from Caelinn's file in /data
geneAgeList = as.data.frame(read.table(sampleAgeFile, header = TRUE, sep = "\t"))
colnames(geneAgeList) = c("ensembl_gene_id", colnames(geneAgeList)[2:6])
geneAgeList = geneAgeList[,1:6]

newTADList = getTADGenesTable(allBioMartHuman, hESCTADsTsirigosWithSE)
geneTADAgeTable = mergeGeneTADAge(newTADList, geneAgeList)
geneTADAgeTableAgeOnly = subset(geneTADAgeTable, gene_age != "No Age Provided")
geneTADAgeTableAgeOnlyNoDups = geneTADAgeTableAgeOnly[!duplicated(geneTADAgeTableAgeOnly[, "ensembl_gene_id"]),]

TADAgeList = getTADAgeList(geneTADAgeTableAgeOnlyNoDups, ageEquivalencies_ranking)

ageJumpInsulation = getJumpListVsInsulation(TADAgeList, hESCTADInsulations, chromosomes_hg19)

scatter_plot_ageJumps_all = ggplot(ageJumpInsulation, aes(insulation, age_jump, colour = insulation)) + geom_point(shape = 16, size = 2, alpha = 0.7) + theme_minimal() + scale_colour_gradient(low = "#0091ff", high = "#f0650e") + labs(title = "age_jump vs insulation", subtitle = "Taking all borders") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), plot.subtitle = element_text(size = 11, face = "bold", family = "Ubuntu"))
scatter_plot_ageJumps_min4 = ggplot(subset(ageJumpInsulation, previous_totgenes > 3 & next_totgenes > 3), aes(insulation, age_jump, colour = insulation)) + geom_point(shape = 16, size = 2, alpha = 0.7) + theme_minimal() + scale_colour_gradient(low = "#0091ff", high = "#f0650e") + labs(title = "age_jump vs insulation", subtitle = "Taking borders with at least 4 genes on both sides") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), plot.subtitle = element_text(size = 11, face = "bold", family = "Ubuntu"))
scatter_plot_ageJumps_min10 = ggplot(subset(ageJumpInsulation, previous_totgenes > 9 & next_totgenes > 9), aes(insulation, age_jump, colour = insulation)) + geom_point(shape = 16, size = 2, alpha = 0.7) + theme_minimal() + scale_colour_gradient(low = "#0091ff", high = "#f0650e") + labs(title = "age_jump vs insulation", subtitle = "Taking borders with at least 10 genes on both sides") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), plot.subtitle = element_text(size = 11, face = "bold", family = "Ubuntu"))

ggsave("/mnt/sexreg/temporal/geneage/TADInsulation/scatter_ageJumps_all.png", plot = scatter_plot_ageJumps_all, height = 6, width = 6, dpi = 300, units = "in")
ggsave("/mnt/sexreg/temporal/geneage/TADInsulation/scatter_ageJumps_min4.png", plot = scatter_plot_ageJumps_min4, height = 6, width = 6, dpi = 300, units = "in")
ggsave("/mnt/sexreg/temporal/geneage/TADInsulation/scatter_ageJumps_min10.png", plot = scatter_plot_ageJumps_min10, height = 6, width = 6, dpi = 300, units = "in")

print("cor(ageJumpInsulation$insulation, ageJumpInsulation$age_jump, method = pearson)"
print(cor(ageJumpInsulation$insulation, ageJumpInsulation$age_jump, method = "pearson"))
# 0.2182867
print("cor(subset(ageJumpInsulation, previous_totgenes > 3 & next_totgenes > 3)$insulation, subset(ageJumpInsulation, previous_totgenes > 3 & next_totgenes > 3)$age_jump, method = pearson))")
print(cor(subset(ageJumpInsulation, previous_totgenes > 3 & next_totgenes > 3)$insulation, subset(ageJumpInsulation, previous_totgenes > 3 & next_totgenes > 3)$age_jump, method = "pearson"))
# 0.2198826
print("cor(subset(ageJumpInsulation, previous_totgenes > 9 & next_totgenes > 9)$insulation, subset(ageJumpInsulation, previous_totgenes > 9 & next_totgenes > 9)$age_jump, method = pearson))")
print(cor(subset(ageJumpInsulation, previous_totgenes > 9 & next_totgenes > 9)$insulation, subset(ageJumpInsulation, previous_totgenes > 9 & next_totgenes > 9)$age_jump, method = "pearson"))
# -0.01715268

plotHistogramInsulations_all = ggplot(ageJumpInsulation, aes(x = age_jump, y = (..count..) / sum(..count..))) + geom_histogram(colour = eyColour["black"], fill = eyColour["forestGreen"], bins = 16) + labs(x = "ageJump (binary, 1 = young, 16 = old)", y = "percent", title = "ageJump distribution for all insulations") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), axis.title.x = element_text(size = 12, family = "Ubuntu"), axis.title.y = element_text(size = 12, family = "Ubuntu")) + scale_x_continuous(labels = scales::comma) + scale_y_continuous(labels = scales::percent, limits = c(0, 0.4))
plotHistogramInsulations_over17 = ggplot(subset(ageJumpInsulation, insulation > 1.7), aes(x = age_jump, y = (..count..) / sum(..count..))) + geom_histogram(colour = eyColour["black"], fill = eyColour["forestGreen"], bins = 16) + labs(x = "ageJump (binary, 1 = young, 16 = old)", y = "percent", title = "ageJump distribution for Tsins > 1.7") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), axis.title.x = element_text(size = 12, family = "Ubuntu"), axis.title.y = element_text(size = 12, family = "Ubuntu")) + scale_x_continuous(labels = scales::comma) + scale_y_continuous(labels = scales::percent, limits = c(0, 0.4))
plotHistogramInsulations_sub17 = ggplot(subset(ageJumpInsulation, insulation <= 1.7), aes(x = age_jump, y = (..count..) / sum(..count..))) + geom_histogram(colour = eyColour["black"], fill = eyColour["forestGreen"], bins = 16) + labs(x = "ageJump (binary, 1 = young, 16 = old)", y = "percent", title = "ageJump distribution for Tsins <= 1.7") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), axis.title.x = element_text(size = 12, family = "Ubuntu"), axis.title.y = element_text(size = 12, family = "Ubuntu")) + scale_x_continuous(labels = scales::comma) + scale_y_continuous(labels = scales::percent, limits = c(0, 0.4))

ggsave("/mnt/sexreg/temporal/geneage/TADInsulation/hist_insulation_all.png", plot = plotHistogramInsulations_all, height = 6, width = 6, dpi = 300, units = "in")
ggsave("/mnt/sexreg/temporal/geneage/TADInsulation/hist_insulation_over17.png", plot = plotHistogramInsulations_over17, height = 6, width = 6, dpi = 300, units = "in")
ggsave("/mnt/sexreg/temporal/geneage/TADInsulation/hist_insulation_sub17.png", plot = plotHistogramInsulations_sub17, height = 6, width = 6, dpi = 300, units = "in")


hESCTsins = getTsinsTableFromFolder("/mnt/sexreg/temporal/geneage/TADInsulation/all_files/H1_hESC-untreated-HindIII-rep1/", "*.bed")

saveTsinsHistograms(ageJumpInsulation, hESCTsins, "/mnt/sexreg/temporal/geneage/TADInsulation/", prefix = "hist_insulation", myColour = "fern", myYLim = c(0, 0.4))


################## randomising ages and seeing what happens

geneTaDAgeTable_rndAge = randomiseAllAges(geneTADAgeTableAgeOnlyNoDups)

TADAgeList_rndAge = getTADAgeList(geneTaDAgeTable_rndAge, ageEquivalencies_ranking)

ageJumpInsulation_rndAge = getJumpListVsInsulation(TADAgeList_rndAge, hESCTADInsulations, chromosomes_hg19)

scatter_plot_ageJumps_rndAge_all = ggplot(ageJumpInsulation_rndAge, aes(insulation, age_jump, colour = insulation)) + geom_point(shape = 16, size = 2, alpha = 0.7) + theme_minimal() + scale_colour_gradient(low = "#0091ff", high = "#f0650e") + labs(title = "age_jump vs insulation (rnd age)", subtitle = "Taking all borders") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), plot.subtitle = element_text(size = 11, face = "bold", family = "Ubuntu"))
scatter_plot_ageJumps_rndAge_min4 = ggplot(subset(ageJumpInsulation_rndAge, previous_totgenes > 3 & next_totgenes > 3), aes(insulation, age_jump, colour = insulation)) + geom_point(shape = 16, size = 2, alpha = 0.7) + theme_minimal() + scale_colour_gradient(low = "#0091ff", high = "#f0650e") + labs(title = "age_jump vs insulation (rnd age)", subtitle = "Taking borders with at least 4 genes on both sides") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), plot.subtitle = element_text(size = 11, face = "bold", family = "Ubuntu"))
scatter_plot_ageJumps_rndAge_min10 = ggplot(subset(ageJumpInsulation_rndAge, previous_totgenes > 9 & next_totgenes > 9), aes(insulation, age_jump, colour = insulation)) + geom_point(shape = 16, size = 2, alpha = 0.7) + theme_minimal() + scale_colour_gradient(low = "#0091ff", high = "#f0650e") + labs(title = "age_jump vs insulation (rnd age)", subtitle = "Taking borders with at least 10 genes on both sides") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), plot.subtitle = element_text(size = 11, face = "bold", family = "Ubuntu"))

ggsave("/mnt/sexreg/temporal/geneage/TADInsulation/scatter_ageJumps_rndAge_all.png", plot = scatter_plot_ageJumps_rndAge_all, height = 6, width = 6, dpi = 300, units = "in")
ggsave("/mnt/sexreg/temporal/geneage/TADInsulation/scatter_ageJumps_rndAge_min4.png", plot = scatter_plot_ageJumps_rndAge_min4, height = 6, width = 6, dpi = 300, units = "in")
ggsave("/mnt/sexreg/temporal/geneage/TADInsulation/scatter_ageJumps_rndAge_min10.png", plot = scatter_plot_ageJumps_rndAge_min10, height = 6, width = 6, dpi = 300, units = "in")

print("cor(ageJumpInsulation_rndAge$insulation, ageJumpInsulation_rndAge$age_jump, method = pearson)")
print(cor(ageJumpInsulation_rndAge$insulation, ageJumpInsulation_rndAge$age_jump, method = "pearson"))
# 0.2182867
print("cor(subset(ageJumpInsulation_rndAge, previous_totgenes > 3 & next_totgenes > 3)$insulation, subset(ageJumpInsulation_rndAge, previous_totgenes > 3 & next_totgenes > 3)$age_jump, method = pearson)")
print(cor(subset(ageJumpInsulation_rndAge, previous_totgenes > 3 & next_totgenes > 3)$insulation, subset(ageJumpInsulation_rndAge, previous_totgenes > 3 & next_totgenes > 3)$age_jump, method = "pearson"))
# 0.2198826
print("cor(subset(ageJumpInsulation_rndAge, previous_totgenes > 9 & next_totgenes > 9)$insulation, subset(ageJumpInsulation_rndAge, previous_totgenes > 9 & next_totgenes > 9)$age_jump, method = pearson)")
print(cor(subset(ageJumpInsulation_rndAge, previous_totgenes > 9 & next_totgenes > 9)$insulation, subset(ageJumpInsulation_rndAge, previous_totgenes > 9 & next_totgenes > 9)$age_jump, method = "pearson"))
# -0.01715268




plotHistogramInsulations_rndAge_all = ggplot(ageJumpInsulation_rndAge, aes(x = age_jump, y = (..count..) / sum(..count..))) + geom_histogram(colour = eyColour["black"], fill = eyColour["olive"], bins = 16) + labs(x = "ageJump (binary, 1 = young, 16 = old)", y = "percent", title = "ageJump distribution for all insulations") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), axis.title.x = element_text(size = 12, family = "Ubuntu"), axis.title.y = element_text(size = 12, family = "Ubuntu")) + scale_x_continuous(labels = scales::comma) + scale_y_continuous(labels = scales::percent, limits = c(0, 0.4))
plotHistogramInsulations_rndAge_over17 = ggplot(subset(ageJumpInsulation_rndAge, insulation > 1.7), aes(x = age_jump, y = (..count..) / sum(..count..))) + geom_histogram(colour = eyColour["black"], fill = eyColour["olive"], bins = 16) + labs(x = "ageJump (binary, 1 = young, 16 = old)", y = "percent", title = "ageJump distribution for Tsins > 1.7") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), axis.title.x = element_text(size = 12, family = "Ubuntu"), axis.title.y = element_text(size = 12, family = "Ubuntu")) + scale_x_continuous(labels = scales::comma) + scale_y_continuous(labels = scales::percent, limits = c(0, 0.4))
plotHistogramInsulations_rndAge_sub17 = ggplot(subset(ageJumpInsulation_rndAge, insulation <= 1.7), aes(x = age_jump, y = (..count..) / sum(..count..))) + geom_histogram(colour = eyColour["black"], fill = eyColour["olive"], bins = 16) + labs(x = "ageJump (binary, 1 = young, 16 = old)", y = "percent", title = "ageJump distribution for Tsins <= 1.7") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), axis.title.x = element_text(size = 12, family = "Ubuntu"), axis.title.y = element_text(size = 12, family = "Ubuntu")) + scale_x_continuous(labels = scales::comma) + scale_y_continuous(labels = scales::percent, limits = c(0, 0.4))

ggsave("/mnt/sexreg/temporal/geneage/TADInsulation/hist_insulation_rndAge_all.png", plot = plotHistogramInsulations_rndAge_all, height = 6, width = 6, dpi = 300, units = "in")
ggsave("/mnt/sexreg/temporal/geneage/TADInsulation/hist_insulation_rndAge_over17.png", plot = plotHistogramInsulations_rndAge_over17, height = 6, width = 6, dpi = 300, units = "in")
ggsave("/mnt/sexreg/temporal/geneage/TADInsulation/hist_insulation_rndAge_sub17.png", plot = plotHistogramInsulations_rndAge_sub17, height = 6, width = 6, dpi = 300, units = "in")


hESCTsins = getTsinsTableFromFolder("/mnt/sexreg/temporal/geneage/TADInsulation/all_files/H1_hESC-untreated-HindIII-rep1/", "*.bed")

saveTsinsHistograms(ageJumpInsulation_rndAge, hESCTsins, "/mnt/sexreg/temporal/geneage/TADInsulation/", prefix = "hist_insulation_rndAge", myColour = "pear", myYLim = c(0, 0.4))


################## randomising insulations and seeing what happens

TADAgeList = getTADAgeList(geneTADAgeTableAgeOnlyNoDups, ageEquivalencies_ranking)

ageJumpInsulation = getJumpListVsInsulation(TADAgeList, hESCTADInsulations, chromosomes_hg19)

ageJumpInsulation_rndTsins = randomiseAllInsulations(ageJumpInsulation)

scatter_plot_ageJumps_rndTsins_all = ggplot(ageJumpInsulation_rndTsins, aes(insulation, age_jump, colour = insulation)) + geom_point(shape = 16, size = 2, alpha = 0.7) + theme_minimal() + scale_colour_gradient(low = "#0091ff", high = "#f0650e") + labs(title = "age_jump vs insulation (rnd Tsins)", subtitle = "Taking all borders") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), plot.subtitle = element_text(size = 11, face = "bold", family = "Ubuntu"))
scatter_plot_ageJumps_rndTsins_min4 = ggplot(subset(ageJumpInsulation_rndTsins, previous_totgenes > 3 & next_totgenes > 3), aes(insulation, age_jump, colour = insulation)) + geom_point(shape = 16, size = 2, alpha = 0.7) + theme_minimal() + scale_colour_gradient(low = "#0091ff", high = "#f0650e") + labs(title = "age_jump vs insulation (rnd Tsins)", subtitle = "Taking borders with at least 4 genes on both sides") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), plot.subtitle = element_text(size = 11, face = "bold", family = "Ubuntu"))
scatter_plot_ageJumps_rndTsins_min10 = ggplot(subset(ageJumpInsulation_rndTsins, previous_totgenes > 9 & next_totgenes > 9), aes(insulation, age_jump, colour = insulation)) + geom_point(shape = 16, size = 2, alpha = 0.7) + theme_minimal() + scale_colour_gradient(low = "#0091ff", high = "#f0650e") + labs(title = "age_jump vs insulation (rnd Tsins)", subtitle = "Taking borders with at least 10 genes on both sides") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), plot.subtitle = element_text(size = 11, face = "bold", family = "Ubuntu"))

ggsave("/mnt/sexreg/temporal/geneage/TADInsulation/scatter_ageJumps_rndTsins_all.png", plot = scatter_plot_ageJumps_rndTsins_all, height = 6, width = 6, dpi = 300, units = "in")
ggsave("/mnt/sexreg/temporal/geneage/TADInsulation/scatter_ageJumps_rndTsins_min4.png", plot = scatter_plot_ageJumps_rndTsins_min4, height = 6, width = 6, dpi = 300, units = "in")
ggsave("/mnt/sexreg/temporal/geneage/TADInsulation/scatter_ageJumps_rndTsins_min10.png", plot = scatter_plot_ageJumps_rndTsins_min10, height = 6, width = 6, dpi = 300, units = "in")

print("cor(ageJumpInsulation_rndTsins$insulation, ageJumpInsulation_rndTsins$age_jump, method = pearson)")
print(cor(ageJumpInsulation_rndTsins$insulation, ageJumpInsulation_rndTsins$age_jump, method = "pearson"))
# 0.2182867
print("cor(subset(ageJumpInsulation_rndTsins, previous_totgenes > 3 & next_totgenes > 3)$insulation, subset(ageJumpInsulation_rndTsins, previous_totgenes > 3 & next_totgenes > 3)$age_jump, method = pearson)")
print(cor(subset(ageJumpInsulation_rndTsins, previous_totgenes > 3 & next_totgenes > 3)$insulation, subset(ageJumpInsulation_rndTsins, previous_totgenes > 3 & next_totgenes > 3)$age_jump, method = "pearson")
# 0.2198826
print("cor(subset(ageJumpInsulation_rndTsins, previous_totgenes > 9 & next_totgenes > 9)$insulation, subset(ageJumpInsulation_rndTsins, previous_totgenes > 9 & next_totgenes > 9)$age_jump, method = pearson)")
print(cor(subset(ageJumpInsulation_rndTsins, previous_totgenes > 9 & next_totgenes > 9)$insulation, subset(ageJumpInsulation_rndTsins, previous_totgenes > 9 & next_totgenes > 9)$age_jump, method = "pearson"))
# -0.01715268




plotHistogramInsulations_rndTsins_all = ggplot(ageJumpInsulation_rndTsins, aes(x = age_jump, y = (..count..) / sum(..count..))) + geom_histogram(colour = eyColour["black"], fill = eyColour["myrtleGreen"], bins = 16) + labs(x = "ageJump (binary, 1 = young, 16 = old)", y = "percent", title = "ageJump distribution for all insulations") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), axis.title.x = element_text(size = 12, family = "Ubuntu"), axis.title.y = element_text(size = 12, family = "Ubuntu")) + scale_x_continuous(labels = scales::comma) + scale_y_continuous(labels = scales::percent, limits = c(0, 0.4))
plotHistogramInsulations_rndTsins_over17 = ggplot(subset(ageJumpInsulation_rndTsins, insulation > 1.7), aes(x = age_jump, y = (..count..) / sum(..count..))) + geom_histogram(colour = eyColour["black"], fill = eyColour["myrtleGreen"], bins = 16) + labs(x = "ageJump (binary, 1 = young, 16 = old)", y = "percent", title = "ageJump distribution for Tsins > 1.7") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), axis.title.x = element_text(size = 12, family = "Ubuntu"), axis.title.y = element_text(size = 12, family = "Ubuntu")) + scale_x_continuous(labels = scales::comma) + scale_y_continuous(labels = scales::percent, limits = c(0, 0.4))
plotHistogramInsulations_rndTsins_sub17 = ggplot(subset(ageJumpInsulation_rndTsins, insulation <= 1.7), aes(x = age_jump, y = (..count..) / sum(..count..))) + geom_histogram(colour = eyColour["black"], fill = eyColour["myrtleGreen"], bins = 16) + labs(x = "ageJump (binary, 1 = young, 16 = old)", y = "percent", title = "ageJump distribution for Tsins <= 1.7") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), axis.title.x = element_text(size = 12, family = "Ubuntu"), axis.title.y = element_text(size = 12, family = "Ubuntu")) + scale_x_continuous(labels = scales::comma) + scale_y_continuous(labels = scales::percent, limits = c(0, 0.4))

ggsave("/mnt/sexreg/temporal/geneage/TADInsulation/hist_insulation_rndTsins_all.png", plot = plotHistogramInsulations_rndTsins_all, height = 6, width = 6, dpi = 300, units = "in")
ggsave("/mnt/sexreg/temporal/geneage/TADInsulation/hist_insulation_rndTsins_over17.png", plot = plotHistogramInsulations_rndTsins_over17, height = 6, width = 6, dpi = 300, units = "in")
ggsave("/mnt/sexreg/temporal/geneage/TADInsulation/hist_insulation_rndTsins_sub17.png", plot = plotHistogramInsulations_rndTsins_sub17, height = 6, width = 6, dpi = 300, units = "in")


hESCTsins = getTsinsTableFromFolder("/mnt/sexreg/temporal/geneage/TADInsulation/all_files/H1_hESC-untreated-HindIII-rep1/", "*.bed")

saveTsinsHistograms(ageJumpInsulation_rndTsins, hESCTsins, "/mnt/sexreg/temporal/geneage/TADInsulation/", prefix = "hist_insulation_rndTsins", myColour = "mint", myYLim = c(0, 0.4))

################## boxplots of the previous

# real, split -> forestGreen
# real, tsirigos -> fern
# rndAge, split -> olive
# rndAge, tsirigos -> pear
# rndTsins, split -> myrtleGreen
# rndTsins, tsirigos -> mint

saveTsinsBoxplots(ageJumpInsulation, ageJumpInsulation_rndAge, ageJumpInsulation_rndTsins, hESCTsins, colours = c(as.character(eyColour["fern"]), as.character(eyColour["pear"]), as.character(eyColour["mint"])), transparency = 0.15, outputFilePath = "/mnt/sexreg/temporal/geneage/TADInsulation/boxPlotInsulation_splitAt1.7.png")

saveTsinsBoxplots(ageJumpInsulation, ageJumpInsulation_rndAge, ageJumpInsulation_rndTsins, insulationSplit, colours = c(as.character(eyColour["forestGreen"]), as.character(eyColour["olive"]), as.character(eyColour["myrtleGreen"])), transparency = 0.15, outputFilePath = "/mnt/sexreg/temporal/geneage/TADInsulation/boxPlotInsulation_TsirigosSets.png")

saveTsinsBoxplotsSeparated(ageJumpInsulation, ageJumpInsulation_rndAge, ageJumpInsulation_rndTsins, hESCTsins, colours = c(as.character(eyColour["fern"]), as.character(eyColour["pear"]), as.character(eyColour["mint"])), transparency = 0.15, outputFolder = "/mnt/sexreg/temporal/geneage/TADInsulation/", prefix = "boxPlotInsulation_splitAt1.7")

saveTsinsBoxplotsSeparated(ageJumpInsulation, ageJumpInsulation_rndAge, ageJumpInsulation_rndTsins, insulationSplit, colours = c(as.character(eyColour["forestGreen"]), as.character(eyColour["olive"]), as.character(eyColour["myrtleGreen"])), transparency = 0.15, outputFolder = "/mnt/sexreg/temporal/geneage/TADInsulation/", prefix = "boxPlotInsulation_TsirigosSets")

extremeTADBorders = subset(ageJumpInsulation, insulation > 2.25 & age_jump > 7.5)

genesWithExtremeTADBorders = data.frame()
TADsNextToExtremeTADBorders = data.frame()
for (i in 1:nrow(extremeTADBorders)) {
	
	thisTADBorder = extremeTADBorders[i,]
	preTADGenes = subset(geneTADAgeTableAgeOnlyNoDups, tad_chr == thisTADBorder$border_chr & tad_end == thisTADBorder$border_start)
	posTADGenes = subset(geneTADAgeTableAgeOnlyNoDups, tad_chr == thisTADBorder$border_chr & tad_start == thisTADBorder$border_end)
	
	genesWithExtremeTADBorders = rbind(genesWithExtremeTADBorders, preTADGenes, posTADGenes)
	
	preTAD = subset(TADAgeList, tad_chr == thisTADBorder$border_chr & tad_end == thisTADBorder$border_start)
	posTAD = subset(TADAgeList, tad_chr == thisTADBorder$border_chr & tad_start == thisTADBorder$border_end)
	
	TADsNextToExtremeTADBorders = rbind(TADsNextToExtremeTADBorders, preTAD, posTAD)
	}


	
write.table(extremeTADBorders, "/mnt/sexreg/temporal/geneage/TADInsulation/extremeTADborders.txt", row.names = FALSE, quote = FALSE)
write.table(genesWithExtremeTADBorders, "/mnt/sexreg/temporal/geneage/TADInsulation/genesWithExtremeTADBorders.txt", row.names = FALSE, quote = FALSE)
write.table(TADsNextToExtremeTADBorders, "/mnt/sexreg/temporal/geneage/TADInsulation/TADsNextToExtremeTADBorders.txt", row.names = FALSE, quote = FALSE)


################################################
################################################
################################################
##############
############## generalising the analysis #######
##############
################################################
################################################
################################################


doWholeInsulationAnalysis = function(thisAnalysis, analysisInputFolder, analysisOutputFolder, folderWithAgeData, topYHistogram = 0.4) {
    hESCTADInsulations = readTablesInFolder(paste0(analysisInputFolder, "/", thisAnalysis, "/"), "*.bed")
    colnames(hESCTADInsulations) = c("chr", "start", "end", "insulation")
    rownames(hESCTADInsulations) = NULL
    hESCTADInsulations$chr = substr(hESCTADInsulations$chr, 4, length(hESCTADInsulations$chr) - 3)
    hESCTADInsulations$chr = as.character(hESCTADInsulations$chr)
    hESCTADInsulations = hESCTADInsulations[with(hESCTADInsulations, order(chr, start, end)),]

    hESCTADsTsirigosWithSE = boundariesToTADs(hESCTADInsulations, chromosomes_hg19)
    hESCTADsTsirigosNoSE = boundariesToTADs(hESCTADInsulations, chromosomes_hg19, includeStartAndEnd=FALSE)

    library("biomaRt")
    ensembl75 = useMart(host='feb2014.archive.ensembl.org',
                            biomart='ENSEMBL_MART_ENSEMBL',
                            dataset='hsapiens_gene_ensembl')
    allBioMartHuman = getBM(mart = ensembl75, attributes = c("ensembl_gene_id", "wikigene_name", "chromosome_name", "start_position", "end_position", "gene_biotype"))

    thisFolder = folderWithAgeData

    # sampleAgeFile = paste0(thisFolder, "pgen.1007902.s021.tsv") # old, given by Daniel, with no chrX
    sampleAgeFile = paste0(thisFolder, "AgesWithChrX.tsv") # converted from Caelinn's file in /data
    geneAgeList = as.data.frame(read.table(sampleAgeFile, header = TRUE, sep = "\t"))
    colnames(geneAgeList) = c("ensembl_gene_id", colnames(geneAgeList)[2:6])
    geneAgeList = geneAgeList[,1:6]

    newTADList = getTADGenesTable(allBioMartHuman, hESCTADsTsirigosWithSE)
    geneTADAgeTable = mergeGeneTADAge(newTADList, geneAgeList)
    geneTADAgeTableAgeOnly = subset(geneTADAgeTable, gene_age != "No Age Provided")
    geneTADAgeTableAgeOnlyNoDups = geneTADAgeTableAgeOnly[!duplicated(geneTADAgeTableAgeOnly[, "ensembl_gene_id"]),]

    TADAgeList = getTADAgeList(geneTADAgeTableAgeOnlyNoDups, ageEquivalencies_ranking)

    ageJumpInsulation = getJumpListVsInsulation(TADAgeList, hESCTADInsulations, chromosomes_hg19)

    scatter_plot_ageJumps_all = ggplot(ageJumpInsulation, aes(insulation, age_jump, colour = insulation)) + geom_point(shape = 16, size = 2, alpha = 0.7) + theme_minimal() + scale_colour_gradient(low = "#0091ff", high = "#f0650e") + labs(title = "age_jump vs insulation", subtitle = "Taking all borders") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), plot.subtitle = element_text(size = 11, face = "bold", family = "Ubuntu")) + ylim(0, 16)
    scatter_plot_ageJumps_min4 = ggplot(subset(ageJumpInsulation, previous_totgenes > 3 & next_totgenes > 3), aes(insulation, age_jump, colour = insulation)) + geom_point(shape = 16, size = 2, alpha = 0.7) + theme_minimal() + scale_colour_gradient(low = "#0091ff", high = "#f0650e") + labs(title = "age_jump vs insulation", subtitle = "Taking borders with at least 4 genes on both sides") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), plot.subtitle = element_text(size = 11, face = "bold", family = "Ubuntu")) + ylim(0, 16)
    scatter_plot_ageJumps_min10 = ggplot(subset(ageJumpInsulation, previous_totgenes > 9 & next_totgenes > 9), aes(insulation, age_jump, colour = insulation)) + geom_point(shape = 16, size = 2, alpha = 0.7) + theme_minimal() + scale_colour_gradient(low = "#0091ff", high = "#f0650e") + labs(title = "age_jump vs insulation", subtitle = "Taking borders with at least 10 genes on both sides") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), plot.subtitle = element_text(size = 11, face = "bold", family = "Ubuntu")) + ylim(0, 16)

    ggsave(paste0(analysisOutputFolder, "/", thisAnalysis, "_scatter_ageJumps_all.png"), plot = scatter_plot_ageJumps_all, height = 6, width = 6, dpi = 300, units = "in")
    ggsave(paste0(analysisOutputFolder, "/", thisAnalysis, "_scatter_ageJumps_min4.png"), plot = scatter_plot_ageJumps_min4, height = 6, width = 6, dpi = 300, units = "in")
    ggsave(paste0(analysisOutputFolder, "/", thisAnalysis, "_scatter_ageJumps_min10.png"), plot = scatter_plot_ageJumps_min10, height = 6, width = 6, dpi = 300, units = "in")

    plotHistogramInsulations_all = ggplot(ageJumpInsulation, aes(x = age_jump, y = (..count..) / sum(..count..))) + geom_histogram(colour = eyColour["black"], fill = eyColour["forestGreen"], bins = 16) + labs(x = "ageJump (binary, 1 = young, 16 = old)", y = "percent", title = "ageJump distribution for all insulations") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), axis.title.x = element_text(size = 12, family = "Ubuntu"), axis.title.y = element_text(size = 12, family = "Ubuntu")) + scale_x_continuous(labels = scales::comma) + scale_y_continuous(labels = scales::percent, limits = c(0, topYHistogram))
    plotHistogramInsulations_over17 = ggplot(subset(ageJumpInsulation, insulation > 1.7), aes(x = age_jump, y = (..count..) / sum(..count..))) + geom_histogram(colour = eyColour["black"], fill = eyColour["forestGreen"], bins = 16) + labs(x = "ageJump (binary, 1 = young, 16 = old)", y = "percent", title = "ageJump distribution for Tsins > 1.7") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), axis.title.x = element_text(size = 12, family = "Ubuntu"), axis.title.y = element_text(size = 12, family = "Ubuntu")) + scale_x_continuous(labels = scales::comma) + scale_y_continuous(labels = scales::percent, limits = c(0, topYHistogram))
    plotHistogramInsulations_sub17 = ggplot(subset(ageJumpInsulation, insulation <= 1.7), aes(x = age_jump, y = (..count..) / sum(..count..))) + geom_histogram(colour = eyColour["black"], fill = eyColour["forestGreen"], bins = 16) + labs(x = "ageJump (binary, 1 = young, 16 = old)", y = "percent", title = "ageJump distribution for Tsins <= 1.7") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), axis.title.x = element_text(size = 12, family = "Ubuntu"), axis.title.y = element_text(size = 12, family = "Ubuntu")) + scale_x_continuous(labels = scales::comma) + scale_y_continuous(labels = scales::percent, limits = c(0, topYHistogram))

    ggsave(paste0(analysisOutputFolder, "/", thisAnalysis, "_hist_insulation_all.png"), plot = plotHistogramInsulations_all, height = 6, width = 6, dpi = 300, units = "in")
    ggsave(paste0(analysisOutputFolder, "/", thisAnalysis, "_hist_insulation_over17.png"), plot = plotHistogramInsulations_over17, height = 6, width = 6, dpi = 300, units = "in")
    ggsave(paste0(analysisOutputFolder, "/", thisAnalysis, "_hist_insulation_sub17.png"), plot = plotHistogramInsulations_sub17, height = 6, width = 6, dpi = 300, units = "in")


    hESCTsins = getTsinsTableFromFolder(paste0(analysisInputFolder, "/", thisAnalysis, "/"), "*.bed")

    saveTsinsHistograms(ageJumpInsulation, hESCTsins, paste0(analysisOutputFolder, "/"), prefix = paste0(thisAnalysis, "_hist_insulation"), myColour = "fern", myYLim = c(0, topYHistogram))

    ################## randomising ages and seeing what happens

    geneTaDAgeTable_rndAge = randomiseAllAges(geneTADAgeTableAgeOnlyNoDups)

    TADAgeList_rndAge = getTADAgeList(geneTaDAgeTable_rndAge, ageEquivalencies_ranking)

    ageJumpInsulation_rndAge = getJumpListVsInsulation(TADAgeList_rndAge, hESCTADInsulations, chromosomes_hg19)

    scatter_plot_ageJumps_rndAge_all = ggplot(ageJumpInsulation_rndAge, aes(insulation, age_jump, colour = insulation)) + geom_point(shape = 16, size = 2, alpha = 0.7) + theme_minimal() + scale_colour_gradient(low = "#0091ff", high = "#f0650e") + labs(title = "age_jump vs insulation (rnd age)", subtitle = "Taking all borders") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), plot.subtitle = element_text(size = 11, face = "bold", family = "Ubuntu")) + ylim(0, 16)
    scatter_plot_ageJumps_rndAge_min4 = ggplot(subset(ageJumpInsulation_rndAge, previous_totgenes > 3 & next_totgenes > 3), aes(insulation, age_jump, colour = insulation)) + geom_point(shape = 16, size = 2, alpha = 0.7) + theme_minimal() + scale_colour_gradient(low = "#0091ff", high = "#f0650e") + labs(title = "age_jump vs insulation (rnd age)", subtitle = "Taking borders with at least 4 genes on both sides") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), plot.subtitle = element_text(size = 11, face = "bold", family = "Ubuntu")) + ylim(0, 16)
    scatter_plot_ageJumps_rndAge_min10 = ggplot(subset(ageJumpInsulation_rndAge, previous_totgenes > 9 & next_totgenes > 9), aes(insulation, age_jump, colour = insulation)) + geom_point(shape = 16, size = 2, alpha = 0.7) + theme_minimal() + scale_colour_gradient(low = "#0091ff", high = "#f0650e") + labs(title = "age_jump vs insulation (rnd age)", subtitle = "Taking borders with at least 10 genes on both sides") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), plot.subtitle = element_text(size = 11, face = "bold", family = "Ubuntu")) + ylim(0, 16)

    ggsave(paste0(analysisOutputFolder, "/", thisAnalysis, "_scatter_ageJumps_rndAge_all.png"), plot = scatter_plot_ageJumps_rndAge_all, height = 6, width = 6, dpi = 300, units = "in")
    ggsave(paste0(analysisOutputFolder, "/", thisAnalysis, "_scatter_ageJumps_rndAge_min4.png"), plot = scatter_plot_ageJumps_rndAge_min4, height = 6, width = 6, dpi = 300, units = "in")
    ggsave(paste0(analysisOutputFolder, "/", thisAnalysis, "_scatter_ageJumps_rndAge_min10.png"), plot = scatter_plot_ageJumps_rndAge_min10, height = 6, width = 6, dpi = 300, units = "in")

    
    plotHistogramInsulations_rndAge_all = ggplot(ageJumpInsulation_rndAge, aes(x = age_jump, y = (..count..) / sum(..count..))) + geom_histogram(colour = eyColour["black"], fill = eyColour["olive"], bins = 16) + labs(x = "ageJump (binary, 1 = young, 16 = old)", y = "percent", title = "ageJump distribution for all insulations") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), axis.title.x = element_text(size = 12, family = "Ubuntu"), axis.title.y = element_text(size = 12, family = "Ubuntu")) + scale_x_continuous(labels = scales::comma) + scale_y_continuous(labels = scales::percent, limits = c(0, topYHistogram))
    plotHistogramInsulations_rndAge_over17 = ggplot(subset(ageJumpInsulation_rndAge, insulation > 1.7), aes(x = age_jump, y = (..count..) / sum(..count..))) + geom_histogram(colour = eyColour["black"], fill = eyColour["olive"], bins = 16) + labs(x = "ageJump (binary, 1 = young, 16 = old)", y = "percent", title = "ageJump distribution for Tsins > 1.7") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), axis.title.x = element_text(size = 12, family = "Ubuntu"), axis.title.y = element_text(size = 12, family = "Ubuntu")) + scale_x_continuous(labels = scales::comma) + scale_y_continuous(labels = scales::percent, limits = c(0, topYHistogram))
    plotHistogramInsulations_rndAge_sub17 = ggplot(subset(ageJumpInsulation_rndAge, insulation <= 1.7), aes(x = age_jump, y = (..count..) / sum(..count..))) + geom_histogram(colour = eyColour["black"], fill = eyColour["olive"], bins = 16) + labs(x = "ageJump (binary, 1 = young, 16 = old)", y = "percent", title = "ageJump distribution for Tsins <= 1.7") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), axis.title.x = element_text(size = 12, family = "Ubuntu"), axis.title.y = element_text(size = 12, family = "Ubuntu")) + scale_x_continuous(labels = scales::comma) + scale_y_continuous(labels = scales::percent, limits = c(0, topYHistogram))

    ggsave(paste0(analysisOutputFolder, "/", thisAnalysis, "_hist_insulation_rndAge_all.png"), plot = plotHistogramInsulations_rndAge_all, height = 6, width = 6, dpi = 300, units = "in")
    ggsave(paste0(analysisOutputFolder, "/", thisAnalysis, "_hist_insulation_rndAge_over17.png"), plot = plotHistogramInsulations_rndAge_over17, height = 6, width = 6, dpi = 300, units = "in")
    ggsave(paste0(analysisOutputFolder, "/", thisAnalysis, "_hist_insulation_rndAge_sub17.png"), plot = plotHistogramInsulations_rndAge_sub17, height = 6, width = 6, dpi = 300, units = "in")


    hESCTsins = getTsinsTableFromFolder(paste0(analysisInputFolder, "/", thisAnalysis, "/"), "*.bed")

    saveTsinsHistograms(ageJumpInsulation_rndAge, hESCTsins, paste0(analysisOutputFolder, "/"), prefix = paste0(thisAnalysis, "hist_insulation_rndAge"), myColour = "pear", myYLim = c(0, topYHistogram))


    ################## randomising insulations and seeing what happens

    TADAgeList = getTADAgeList(geneTADAgeTableAgeOnlyNoDups, ageEquivalencies_ranking)

    ageJumpInsulation = getJumpListVsInsulation(TADAgeList, hESCTADInsulations, chromosomes_hg19)

    ageJumpInsulation_rndTsins = randomiseAllInsulations(ageJumpInsulation)

    scatter_plot_ageJumps_rndTsins_all = ggplot(ageJumpInsulation_rndTsins, aes(insulation, age_jump, colour = insulation)) + geom_point(shape = 16, size = 2, alpha = 0.7) + theme_minimal() + scale_colour_gradient(low = "#0091ff", high = "#f0650e") + labs(title = "age_jump vs insulation (rnd Tsins)", subtitle = "Taking all borders") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), plot.subtitle = element_text(size = 11, face = "bold", family = "Ubuntu")) + ylim(0, 16)
    scatter_plot_ageJumps_rndTsins_min4 = ggplot(subset(ageJumpInsulation_rndTsins, previous_totgenes > 3 & next_totgenes > 3), aes(insulation, age_jump, colour = insulation)) + geom_point(shape = 16, size = 2, alpha = 0.7) + theme_minimal() + scale_colour_gradient(low = "#0091ff", high = "#f0650e") + labs(title = "age_jump vs insulation (rnd Tsins)", subtitle = "Taking borders with at least 4 genes on both sides") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), plot.subtitle = element_text(size = 11, face = "bold", family = "Ubuntu")) + ylim(0, 16)
    scatter_plot_ageJumps_rndTsins_min10 = ggplot(subset(ageJumpInsulation_rndTsins, previous_totgenes > 9 & next_totgenes > 9), aes(insulation, age_jump, colour = insulation)) + geom_point(shape = 16, size = 2, alpha = 0.7) + theme_minimal() + scale_colour_gradient(low = "#0091ff", high = "#f0650e") + labs(title = "age_jump vs insulation (rnd Tsins)", subtitle = "Taking borders with at least 10 genes on both sides") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), plot.subtitle = element_text(size = 11, face = "bold", family = "Ubuntu")) + ylim(0, 16)

    ggsave(paste0(analysisOutputFolder, "/", thisAnalysis, "_scatter_ageJumps_rndTsins_all.png"), plot = scatter_plot_ageJumps_rndTsins_all, height = 6, width = 6, dpi = 300, units = "in")
    ggsave(paste0(analysisOutputFolder, "/", thisAnalysis, "_scatter_ageJumps_rndTsins_min4.png"), plot = scatter_plot_ageJumps_rndTsins_min4, height = 6, width = 6, dpi = 300, units = "in")
    ggsave(paste0(analysisOutputFolder, "/", thisAnalysis, "_scatter_ageJumps_rndTsins_min10.png"), plot = scatter_plot_ageJumps_rndTsins_min10, height = 6, width = 6, dpi = 300, units = "in")

    plotHistogramInsulations_rndTsins_all = ggplot(ageJumpInsulation_rndTsins, aes(x = age_jump, y = (..count..) / sum(..count..))) + geom_histogram(colour = eyColour["black"], fill = eyColour["myrtleGreen"], bins = 16) + labs(x = "ageJump (binary, 1 = young, 16 = old)", y = "percent", title = "ageJump distribution for all insulations") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), axis.title.x = element_text(size = 12, family = "Ubuntu"), axis.title.y = element_text(size = 12, family = "Ubuntu")) + scale_x_continuous(labels = scales::comma) + scale_y_continuous(labels = scales::percent, limits = c(0, topYHistogram))
    plotHistogramInsulations_rndTsins_over17 = ggplot(subset(ageJumpInsulation_rndTsins, insulation > 1.7), aes(x = age_jump, y = (..count..) / sum(..count..))) + geom_histogram(colour = eyColour["black"], fill = eyColour["myrtleGreen"], bins = 16) + labs(x = "ageJump (binary, 1 = young, 16 = old)", y = "percent", title = "ageJump distribution for Tsins > 1.7") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), axis.title.x = element_text(size = 12, family = "Ubuntu"), axis.title.y = element_text(size = 12, family = "Ubuntu")) + scale_x_continuous(labels = scales::comma) + scale_y_continuous(labels = scales::percent, limits = c(0, topYHistogram))
    plotHistogramInsulations_rndTsins_sub17 = ggplot(subset(ageJumpInsulation_rndTsins, insulation <= 1.7), aes(x = age_jump, y = (..count..) / sum(..count..))) + geom_histogram(colour = eyColour["black"], fill = eyColour["myrtleGreen"], bins = 16) + labs(x = "ageJump (binary, 1 = young, 16 = old)", y = "percent", title = "ageJump distribution for Tsins <= 1.7") + theme(legend.position = "none", plot.title = element_text(size = 16, face = "bold", family = "Ubuntu"), axis.title.x = element_text(size = 12, family = "Ubuntu"), axis.title.y = element_text(size = 12, family = "Ubuntu")) + scale_x_continuous(labels = scales::comma) + scale_y_continuous(labels = scales::percent, limits = c(0, topYHistogram))

    ggsave(paste0(analysisOutputFolder, "/", thisAnalysis, "_hist_insulation_rndTsins_all.png"), plot = plotHistogramInsulations_rndTsins_all, height = 6, width = 6, dpi = 300, units = "in")
    ggsave(paste0(analysisOutputFolder, "/", thisAnalysis, "_hist_insulation_rndTsins_over17.png"), plot = plotHistogramInsulations_rndTsins_over17, height = 6, width = 6, dpi = 300, units = "in")
    ggsave(paste0(analysisOutputFolder, "/", thisAnalysis, "_hist_insulation_rndTsins_sub17.png"), plot = plotHistogramInsulations_rndTsins_sub17, height = 6, width = 6, dpi = 300, units = "in")


    hESCTsins = getTsinsTableFromFolder(paste0(analysisInputFolder, "/", thisAnalysis, "/"), "*.bed")

    saveTsinsHistograms(ageJumpInsulation_rndTsins, hESCTsins, paste0(analysisOutputFolder, "/"), prefix = paste0(thisAnalysis, "hist_insulation_rndTsins"), myColour = "mint", myYLim = c(0, topYHistogram))

    ################## boxplots of the previous

    # real, split -> forestGreen
    # real, tsirigos -> fern
    # rndAge, split -> olive
    # rndAge, tsirigos -> pear
    # rndTsins, split -> myrtleGreen
    # rndTsins, tsirigos -> mint

    saveTsinsBoxplots(ageJumpInsulation, ageJumpInsulation_rndAge, ageJumpInsulation_rndTsins, hESCTsins, colours = c(as.character(eyColour["fern"]), as.character(eyColour["pear"]), as.character(eyColour["mint"])), transparency = 0.15, outputFilePath = paste0(analysisOutputFolder, "/", thisAnalysis, "_boxPlotInsulation_splitAt1.7.png"))

    saveTsinsBoxplots(ageJumpInsulation, ageJumpInsulation_rndAge, ageJumpInsulation_rndTsins, insulationSplit, colours = c(as.character(eyColour["forestGreen"]), as.character(eyColour["olive"]), as.character(eyColour["myrtleGreen"])), transparency = 0.15, outputFilePath = paste0(analysisOutputFolder, "/", thisAnalysis, "boxPlotInsulation_TsirigosSets.png"))

    saveTsinsBoxplotsSeparated(ageJumpInsulation, ageJumpInsulation_rndAge, ageJumpInsulation_rndTsins, hESCTsins, colours = c(as.character(eyColour["fern"]), as.character(eyColour["pear"]), as.character(eyColour["mint"])), transparency = 0.15, outputFolder = paste0(analysisOutputFolder, "/"), prefix = paste0(thisAnalysis, "_boxPlotInsulation_splitAt1.7"))

    saveTsinsBoxplotsSeparated(ageJumpInsulation, ageJumpInsulation_rndAge, ageJumpInsulation_rndTsins, insulationSplit, colours = c(as.character(eyColour["forestGreen"]), as.character(eyColour["olive"]), as.character(eyColour["myrtleGreen"])), transparency = 0.15, outputFolder = paste0(analysisOutputFolder, "/"), prefix = paste0(thisAnalysis, "_boxPlotInsulation_TsirigosSets"))

    extremeTADBorders = subset(ageJumpInsulation, insulation > 2.25 & age_jump > 7.5)

    genesWithExtremeTADBorders = data.frame()
    TADsNextToExtremeTADBorders = data.frame()
    for (i in 1:nrow(extremeTADBorders)) {
        
        thisTADBorder = extremeTADBorders[i,]
        preTADGenes = subset(geneTADAgeTableAgeOnlyNoDups, tad_chr == thisTADBorder$border_chr & tad_end == thisTADBorder$border_start)
        posTADGenes = subset(geneTADAgeTableAgeOnlyNoDups, tad_chr == thisTADBorder$border_chr & tad_start == thisTADBorder$border_end)
        
        genesWithExtremeTADBorders = rbind(genesWithExtremeTADBorders, preTADGenes, posTADGenes)
        
        preTAD = subset(TADAgeList, tad_chr == thisTADBorder$border_chr & tad_end == thisTADBorder$border_start)
        posTAD = subset(TADAgeList, tad_chr == thisTADBorder$border_chr & tad_start == thisTADBorder$border_end)
        
        TADsNextToExtremeTADBorders = rbind(TADsNextToExtremeTADBorders, preTAD, posTAD)
        }


        
    write.table(extremeTADBorders, paste0(analysisOutputFolder, "/", thisAnalysis, "_extremeTADborders.txt"), row.names = FALSE, quote = FALSE)
    write.table(genesWithExtremeTADBorders, paste0(analysisOutputFolder, "/", thisAnalysis, "genesWithExtremeTADBorders.txt"), row.names = FALSE, quote = FALSE)
    write.table(TADsNextToExtremeTADBorders, paste0(analysisOutputFolder, "/", thisAnalysis, "_TADsNextToExtremeTADBorders.txt"), row.names = FALSE, quote = FALSE)
    
    # correlations real
    print("cor(ageJumpInsulation$insulation, ageJumpInsulation$age_jump, method = pearson)")
    print(cor(ageJumpInsulation$insulation, ageJumpInsulation$age_jump, method = "pearson"))
    print("# 0.2182867")
    print("cor(subset(ageJumpInsulation, previous_totgenes > 3 & next_totgenes > 3)$insulation, subset(ageJumpInsulation, previous_totgenes > 3 & next_totgenes > 3)$age_jump, method = pearson)")
    print(cor(subset(ageJumpInsulation, previous_totgenes > 3 & next_totgenes > 3)$insulation, subset(ageJumpInsulation, previous_totgenes > 3 & next_totgenes > 3)$age_jump, method = "pearson"))
    print("# 0.2198826")
    print("cor(subset(ageJumpInsulation, previous_totgenes > 9 & next_totgenes > 9)$insulation, subset(ageJumpInsulation, previous_totgenes > 9 & next_totgenes > 9)$age_jump, method = pearson)")
    print(cor(subset(ageJumpInsulation, previous_totgenes > 9 & next_totgenes > 9)$insulation, subset(ageJumpInsulation, previous_totgenes > 9 & next_totgenes > 9)$age_jump, method = "pearson"))
    print("# -0.01715268")
    
    
    # correlations rndAge
    print("")
    print("")
    print("cor(ageJumpInsulation_rndAge$insulation, ageJumpInsulation_rndAge$age_jump, method = pearson)")
    print(cor(ageJumpInsulation_rndAge$insulation, ageJumpInsulation_rndAge$age_jump, method = "pearson"))
    print("# 0.2182867")
    print("cor(subset(ageJumpInsulation_rndAge, previous_totgenes > 3 & next_totgenes > 3)$insulation, subset(ageJumpInsulation_rndAge, previous_totgenes > 3 & next_totgenes > 3)$age_jump, method = pearson)")
    print(cor(subset(ageJumpInsulation_rndAge, previous_totgenes > 3 & next_totgenes > 3)$insulation, subset(ageJumpInsulation_rndAge, previous_totgenes > 3 & next_totgenes > 3)$age_jump, method = "pearson"))
    print("# 0.2198826")
    print("cor(subset(ageJumpInsulation_rndAge, previous_totgenes > 9 & next_totgenes > 9)$insulation, subset(ageJumpInsulation_rndAge, previous_totgenes > 9 & next_totgenes > 9)$age_jump, method = pearson)")
    print(cor(subset(ageJumpInsulation_rndAge, previous_totgenes > 9 & next_totgenes > 9)$insulation, subset(ageJumpInsulation_rndAge, previous_totgenes > 9 & next_totgenes > 9)$age_jump, method = "pearson"))
    print("# -0.01715268")
    
    
    # correlations rndTsins
    print("")
    print("")
    print("cor(ageJumpInsulation_rndTsins$insulation, ageJumpInsulation_rndTsins$age_jump, method = pearson)")
    print(cor(ageJumpInsulation_rndTsins$insulation, ageJumpInsulation_rndTsins$age_jump, method = "pearson"))
    print("# 0.2182867")
    print("cor(subset(ageJumpInsulation_rndTsins, previous_totgenes > 3 & next_totgenes > 3)$insulation, subset(ageJumpInsulation_rndTsins, previous_totgenes > 3 & next_totgenes > 3)$age_jump, method = pearson)")
    print(cor(subset(ageJumpInsulation_rndTsins, previous_totgenes > 3 & next_totgenes > 3)$insulation, subset(ageJumpInsulation_rndTsins, previous_totgenes > 3 & next_totgenes > 3)$age_jump, method = "pearson"))
    print("# 0.2198826")
    print("cor(subset(ageJumpInsulation_rndTsins, previous_totgenes > 9 & next_totgenes > 9)$insulation, subset(ageJumpInsulation_rndTsins, previous_totgenes > 9 & next_totgenes > 9)$age_jump, method = pearson)")
    print(cor(subset(ageJumpInsulation_rndTsins, previous_totgenes > 9 & next_totgenes > 9)$insulation, subset(ageJumpInsulation_rndTsins, previous_totgenes > 9 & next_totgenes > 9)$age_jump, method = "pearson"))
    print("# -0.01715268")
    
    paste0("Looks like we have finished!")
    
    }
    
################################################
######## repeat part of the analysis using
######## GM12878-untreated-HindIII-rep1
################################################


# I want to get the graph for:
#   real: all, Tsins < 1.7, Tsins > 1.7, and the five quintiles by Tsirigos
#   rnd_Tsins: all, Tsins < 1.7, Tsins > 1.7, and the five quintiles by Tsirigos
#


doWholeInsulationAnalysis(
                    thisAnalysis = "GM12878-untreated-HindIII-rep1",
                    analysisOutputFolder = "/mnt/sexreg/temporal/geneage/TADInsulation",
                    analysisInputFolder = "/mnt/sexreg/temporal/geneage/TADInsulation/all_files",
                    folderWithAgeData = "/mnt/sexreg/temporal/geneage/",
					topYHistogram = 0.45
                    )

################################################
######## repeat part of the analysis using
######## GM12878-untreated-MboI-rep1
################################################


doWholeInsulationAnalysis(
                    thisAnalysis = "GM12878-untreated-MboI-rep1",
                    analysisOutputFolder = "/mnt/sexreg/temporal/geneage/TADInsulation",
                    analysisInputFolder = "/mnt/sexreg/temporal/geneage/TADInsulation/all_files",
                    folderWithAgeData = "/mnt/sexreg/temporal/geneage/",
					topYHistogram = 0.45
                    )
